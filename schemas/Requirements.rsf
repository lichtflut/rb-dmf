namespace "http://rb.lichtflut.de/common#" prefix "common"
namespace "http://rb.lichtflut.de/public-constraints#" prefix "constraints"
namespace "http://rb.lichtflut.de/eam#" prefix "eam"
namespace "http://rb.lichtflut.de/requirements#" prefix "req"
			
schema for "req:UseCase" {
	label-rule : "common:hasID"
					
	property "common:hasID" [1..1] {
		field-label : "ID"
		datatype : "String"
	}

	property "common:hasName" [1..1] {
		field-label : "Name"
		datatype : "String"
	}
	
	property "common:hasDescription" [1..1] {
		field-label : "Description"
		field-label[de] : "Beschreibung"
		datatype : "Text"
	}
	
	property "common:hasStatus" [1..1] {
		field-label : "State"
		field-label[de] : "Status"
		datatype : "Resource"
		resource-constraint : "req:UseCaseStatus"
	}
	
	property "req:hasActor" [1..n] {
		field-label : "Actors"
		field-label[de] : "Akteure"
		datatype : "Resource"
		resource-constraint : "req:Actor"
	}
	
	property "common:hasPrecondition" [1..n] {
		field-label : "Preconditions"
		field-label[de] : "Vorbedingungen"
		datatype : "Resource"
		resource-constraint : "req:Condition"
	}
	
	property "common:hasPostcondition" [1..n] {
		field-label : "Postconditions"
		field-label[de] : "Nachbedingungen"
		datatype : "Resource"
		resource-constraint : "req:Condition"
	}
	
	property "req:includes" [1..n] {
		field-label : "Includes"
		field-label[de] : "Inkludiert"
		datatype : "Resource"
		resource-constraint : "req:UseCase"
	}
	
}

schema for "req:UserStory" {
	label-rule : "common:hasID"
					
	property "common:hasID" [1..1] {
		field-label : "ID"
		datatype : "String"
	}

	property "common:hasName" [1..1] {
		field-label : "Name"
		datatype : "String"
	}
	
	property "req:hasActor" [1..n] {
		field-label : "As actor"
		field-label[de] : "Als Akteur"
		datatype : "Resource"
		resource-constraint : "req:Actor"
	}
	
	property "common:hasDescription" [1..1] {
		field-label : "I want"
		field-label[de] : "MÃ¶chte ich"
		datatype : "Text"
	}
	
	property "common:hasStatus" [1..1] {
		field-label : "State"
		field-label[de] : "Status"
		datatype : "Resource"
		resource-constraint : "req:UseCaseStatus"
	}
	
	property "common:hasPrecondition" [1..n] {
		field-label : "Preconditions"
		field-label[de] : "Vorbedingungen"
		datatype : "Resource"
		resource-constraint : "req:Condition"
	}
	
	property "common:hasPostcondition" [1..n] {
		field-label : "Postconditions"
		field-label[de] : "Nachbedingungen"
		datatype : "Resource"
		resource-constraint : "req:Condition"
	}
	
	property "req:includes" [1..n] {
		field-label : "Includes"
		field-label[de] : "Inkludiert"
		datatype : "Resource"
		resource-constraint : "req:UserStory"
	}
	
}

schema for "req:Actor" {
	label-rule : "common:hasName"
					
	property "common:hasName" [1..1] {
		field-label : "Name"
		datatype : "String"
	}
	
	property "common:hasDescription" [1..1] {
		field-label : "Description"
		field-label[de] : "Beschreibung"
		datatype : "Text"
	}
	
}

schema for "req:Condition" {
	label-rule : "common:hasID"
	
	property "common:hasID" [1..1] {
		field-label : "ID"
		datatype : "String"
	}
					
	property "common:hasDescription" [1..1] {
		field-label : "Description"
		field-label[de] : "Beschreibung"
		datatype : "Text"
	}
	
	property "req:includes" [1..n] {
		field-label : "Includes"
		field-label[de] : "Inkludiert"
		datatype : "Resource"
		resource-constraint : "req:Condition"
	}
	
}

schema for "req:UseCaseStatus" {
	label-rule : "common:hasName"
	
	property "common:hasName" [1..1] {
		field-label : "Name"
		datatype : "String"
	}
	
	property "common:hasDescription" [1..1] {
		field-label : "Description"
		field-label[de] : "Beschreibung"
		datatype : "Text"
	}
	
}
